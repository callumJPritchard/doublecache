{
  "version": 3,
  "sources": ["pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\.yarn\\cache\\hash-string-npm-1.0.0-5972f21b3c-6e66df274d.zip\\node_modules\\hash-string\\build\\hash-string.js", "pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\.yarn\\cache\\short-hash-npm-1.0.0-c881200027-383b9eaa31.zip\\node_modules\\short-hash\\src\\index.js", "pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\packages\\disk\\dist\\index.js", "pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\packages\\mem\\dist\\index.js", "pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\packages\\utils\\dist\\index.js", "pnp:C:\\Users\\CallumPritchard\\Documents\\GitHub\\multicache\\packages\\multicache\\dist\\index.js"],
  "sourcesContent": ["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.hash = factory();\n  }\n}(this, function() {\n/**\n    A string hashing function based on Daniel J. Bernstein's popular 'times 33' hash algorithm.\n    @param {string} text - String to hash\n    @return {number} Resulting number.\n*/\nfunction hash(text) {\n    'use strict';\n\n    var hash = 5381,\n        index = text.length;\n\n    while (index) {\n        hash = (hash * 33) ^ text.charCodeAt(--index);\n    }\n\n    return hash >>> 0;\n}\nreturn hash;\n}));\n", "'use strict';\nvar hash = require('hash-string');\n\nmodule.exports = function shortHash(str) {\n  return hash(str).toString(16);\n};\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DiskCache = void 0;\r\nconst short_hash_1 = __importDefault(require(\"short-hash\"));\r\nconst util_1 = require(\"util\");\r\nconst fs_1 = __importDefault(require(\"fs\"));\r\nconst os_1 = __importDefault(require(\"os\"));\r\nclass DiskCache {\r\n    constructor(config) {\r\n        this.directory = ((config === null || config === void 0 ? void 0 : config.directory) || process.env.CACHE_DIRECTORY || os_1.default.tmpdir()) + `/cacheDirectory`;\r\n        let index = 0;\r\n        // increase index until directory is unique\r\n        while (fs_1.default.existsSync(this.directory))\r\n            this.directory = ((config === null || config === void 0 ? void 0 : config.directory) || process.env.CACHE_DIRECTORY || os_1.default.tmpdir()) + `/cacheDirectory${index++}`;\r\n        fs_1.default.mkdirSync(this.directory);\r\n    }\r\n    async get(key, maxAge) {\r\n        const fileData = await this.getFile(key);\r\n        const val = fileData.find(x => x.key === key);\r\n        if (!val)\r\n            return;\r\n        if (maxAge && val.age + maxAge < Date.now())\r\n            return; // too old, return early\r\n        await this.setBase(val);\r\n        return val.value;\r\n    }\r\n    async setBase(data) {\r\n        const existing = await this.getFile(data.key);\r\n        const found = existing.findIndex(x => x.key === data.key);\r\n        const toSet = { key: data.key, value: data.value, age: data.age, lastAccess: Date.now() };\r\n        found >= 0 ? existing[found] = toSet : existing.push(toSet); // either update the other entry or push a new one\r\n        await this.setFile(data.key, existing);\r\n    }\r\n    async set(key, data) {\r\n        await this.setBase({ key, value: data, age: Date.now(), lastAccess: Date.now() });\r\n    }\r\n    async getFile(key) {\r\n        try {\r\n            const data = await (0, util_1.promisify)(fs_1.default.readFile)(this.keyToFileName(key));\r\n            return JSON.parse(data.toString());\r\n        }\r\n        catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n    async setFile(key, fileData) {\r\n        await (0, util_1.promisify)(fs_1.default.writeFile)(this.keyToFileName(key), JSON.stringify(fileData));\r\n    }\r\n    keyToFileName(key) {\r\n        return `${this.directory}/${(0, short_hash_1.default)(key)}`;\r\n    }\r\n}\r\nexports.DiskCache = DiskCache;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AutoAdjustingMemoryCache = exports.MemoryCache = void 0;\r\nconst os_1 = __importDefault(require(\"os\"));\r\nclass MemoryCache {\r\n    constructor(maxSize, trimThreshold) {\r\n        this.cache = [];\r\n        this.thresholdCounter = 0;\r\n        this.maxSize = maxSize;\r\n        this.trimThreshold = trimThreshold || Math.ceil(this.maxSize * 0.5);\r\n    }\r\n    async get(key, maxAge) {\r\n        const val = this.cache.find(item => item.key === key);\r\n        if (!val)\r\n            return;\r\n        if (maxAge && val.age + maxAge < Date.now())\r\n            return; // too old, return early\r\n        // update last accessed\r\n        this.setBase({ key, value: val.value, age: val.age, lastAccess: Date.now() });\r\n        return val.value;\r\n    }\r\n    setBase(data) {\r\n        const index = this.cache.findIndex(item => item.key === data.key);\r\n        index > -1 ? this.cache[index] = data : this.cache.push(data); // either update the other entry or push a new one\r\n    }\r\n    async set(key, data) {\r\n        this.setBase({ key, value: data, age: Date.now(), lastAccess: Date.now() });\r\n        // trim if we are oversized\r\n        if (this.thresholdCounter++ >= this.trimThreshold) {\r\n            this.thresholdCounter = 0;\r\n            this.trim();\r\n        }\r\n    }\r\n    trim() {\r\n        this.cache.sort((a, b) => b.lastAccess - a.lastAccess);\r\n        this.cache.length = Math.min(this.maxSize, this.cache.length);\r\n    }\r\n}\r\nexports.MemoryCache = MemoryCache;\r\nclass AutoAdjustingMemoryCache extends MemoryCache {\r\n    constructor(config) {\r\n        super(config.initialMaxSize);\r\n        this.targetMemFrac = config.targetMemPercent / 100;\r\n        this.minimumSize = config.minimumSize || 10;\r\n    }\r\n    trim() {\r\n        const maxRam = os_1.default.totalmem();\r\n        const freeRam = os_1.default.freemem();\r\n        const currentUse = freeRam / maxRam;\r\n        if (currentUse < this.targetMemFrac)\r\n            return; // we dont need to trim if we are below the target\r\n        // we are over: how much are we over?\r\n        const overFraction = currentUse - this.targetMemFrac;\r\n        this.cache.sort((a, b) => b.lastAccess - a.lastAccess);\r\n        this.cache.length = Math.min(Math.floor(this.cache.length - (this.cache.length * overFraction * 0.5)), this.minimumSize); // we want to trim half the amount we are over. Ensure we dont go below minimum size\r\n    }\r\n}\r\nexports.AutoAdjustingMemoryCache = AutoAdjustingMemoryCache;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cacheifyFunc = exports.CombineCaches = void 0;\r\nconst short_hash_1 = __importDefault(require(\"short-hash\"));\r\nclass CombineCaches {\r\n    constructor(...caches) { this.caches = caches; } // just add the caches to array\r\n    async get(key, maxAge) {\r\n        for (let i = 0; i < this.caches.length; i++) {\r\n            const val = await this.caches[i].get(key, maxAge);\r\n            if (val) { // we found it!\r\n                // add to all faster caches\r\n                while (i--)\r\n                    await this.caches[i].set(key, val);\r\n                return val; // return it\r\n            }\r\n        }\r\n    }\r\n    async set(key, value) {\r\n        for (let cache of this.caches)\r\n            await cache.set(key, value); // add to all caches\r\n    }\r\n}\r\nexports.CombineCaches = CombineCaches;\r\nfunction cacheifyFunc(cache, fn) {\r\n    const nameStart = fn.name || (0, short_hash_1.default)(fn.toString()); // todo: make this more unique \r\n    const cFn = async function (config, ...args) {\r\n        if (config.dontCache)\r\n            return await fn(...args);\r\n        const key = `${nameStart}-${JSON.stringify(args)}`;\r\n        const val = await cache.get(key, config.maxAge);\r\n        if (val)\r\n            return val; // return it if we found it\r\n        const ret = await fn(...args); // otherwise call the function\r\n        await cache.set(key, ret); // and set it\r\n        return ret;\r\n    };\r\n    const ret = (...args) => cFn({}, ...args);\r\n    ret.config = (config) => (...args) => cFn(config, ...args);\r\n    return ret;\r\n}\r\nexports.cacheifyFunc = cacheifyFunc;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cacheify = exports.multicache = void 0;\r\nconst disk_1 = require(\"@multicache/disk\");\r\nconst mem_1 = require(\"@multicache/mem\");\r\nconst utils_1 = require(\"@multicache/utils\");\r\nclass Cache {\r\n    constructor(config) {\r\n        this.combinedCache = new utils_1.CombineCaches(new mem_1.AutoAdjustingMemoryCache({\r\n            minimumSize: (config === null || config === void 0 ? void 0 : config.minimumSize) || 10,\r\n            initialMaxSize: (config === null || config === void 0 ? void 0 : config.initialMaxSize) || 1000,\r\n            targetMemPercent: (config === null || config === void 0 ? void 0 : config.targetMemPercent) || 90\r\n        }), new disk_1.DiskCache());\r\n        this.get = this.combinedCache.get;\r\n        this.set = this.combinedCache.set;\r\n    }\r\n    static getInstance() {\r\n        if (!this._instance)\r\n            this._instance = new Cache();\r\n        return this._instance;\r\n    }\r\n}\r\nconst multicache = Cache.getInstance();\r\nexports.multicache = multicache;\r\nfunction cacheify(fn) {\r\n    return (0, utils_1.cacheifyFunc)(multicache, fn);\r\n}\r\nexports.cacheify = cacheify;\r\n"],
  "mappings": "8DAAA,gBAAC,UAAS,EAAM,EAAS,CACvB,AAAI,MAAO,SAAW,YAAc,OAAO,IACzC,OAAO,GAAI,GACN,AAAI,MAAO,IAAY,SAC5B,EAAO,QAAU,IAEjB,EAAK,KAAO,MAEd,EAAM,UAAW,CAMnB,WAAc,EAAM,CAChB,aAKA,OAHI,GAAO,KACP,EAAQ,EAAK,OAEV,GACH,EAAQ,EAAO,GAAM,EAAK,WAAW,EAAE,GAG3C,MAAO,KAAS,EAEpB,MAAO,OC1BP,6BACA,GAAI,GAAO,IAEX,EAAO,QAAU,SAAmB,EAAK,CACvC,MAAO,GAAK,GAAK,SAAS,OCJ5B,yBACA,GAAI,GAAmB,GAAQ,EAAK,iBAAoB,SAAU,EAAK,CACnE,MAAQ,IAAO,EAAI,WAAc,EAAM,CAAE,QAAW,IAExD,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,KACtD,EAAQ,UAAY,OACpB,GAAM,GAAe,EAAgB,KAC/B,EAAS,QAAQ,QACjB,EAAO,EAAgB,QAAQ,OAC/B,EAAO,EAAgB,QAAQ,OACrC,OAAgB,CACZ,YAAY,EAAQ,CAChB,KAAK,UAAc,KAAW,KAA4B,OAAS,EAAO,YAAc,QAAQ,IAAI,iBAAmB,EAAK,QAAQ,UAAY,kBAChJ,GAAI,GAAQ,EAEZ,KAAO,EAAK,QAAQ,WAAW,KAAK,YAChC,KAAK,UAAc,KAAW,KAA4B,OAAS,EAAO,YAAc,QAAQ,IAAI,iBAAmB,EAAK,QAAQ,UAAY,kBAAkB,MACtK,EAAK,QAAQ,UAAU,KAAK,gBAE1B,KAAI,EAAK,EAAQ,CAEnB,GAAM,GAAM,AADK,MAAM,MAAK,QAAQ,IACf,KAAK,GAAK,EAAE,MAAQ,GACzC,GAAI,EAAC,GAED,KAAU,EAAI,IAAM,EAAS,KAAK,OAEtC,YAAM,MAAK,QAAQ,GACZ,EAAI,WAET,SAAQ,EAAM,CAChB,GAAM,GAAW,KAAM,MAAK,QAAQ,EAAK,KACnC,EAAQ,EAAS,UAAU,GAAK,EAAE,MAAQ,EAAK,KAC/C,EAAQ,CAAE,IAAK,EAAK,IAAK,MAAO,EAAK,MAAO,IAAK,EAAK,IAAK,WAAY,KAAK,OAClF,GAAS,EAAI,EAAS,GAAS,EAAQ,EAAS,KAAK,GACrD,KAAM,MAAK,QAAQ,EAAK,IAAK,QAE3B,KAAI,EAAK,EAAM,CACjB,KAAM,MAAK,QAAQ,CAAE,MAAK,MAAO,EAAM,IAAK,KAAK,MAAO,WAAY,KAAK,aAEvE,SAAQ,EAAK,CACf,GAAI,CACA,GAAM,GAAO,KAAO,AAzChC,GAyCmC,EAAO,WAAW,EAAK,QAAQ,UAAU,KAAK,cAAc,IACnF,MAAO,MAAK,MAAM,EAAK,iBAE3B,CACI,MAAO,SAGT,SAAQ,EAAK,EAAU,CACzB,KAAO,AAjDf,GAiDkB,EAAO,WAAW,EAAK,QAAQ,WAAW,KAAK,cAAc,GAAM,KAAK,UAAU,IAEhG,cAAc,EAAK,CACf,MAAO,GAAG,KAAK,aAAc,AApDrC,GAoDwC,EAAa,SAAS,OAG9D,EAAQ,UAAY,ICvDpB,yBACA,GAAI,GAAmB,GAAQ,EAAK,iBAAoB,SAAU,EAAK,CACnE,MAAQ,IAAO,EAAI,WAAc,EAAM,CAAE,QAAW,IAExD,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,KACtD,EAAQ,yBAA2B,EAAQ,YAAc,OACzD,GAAM,GAAO,EAAgB,QAAQ,OACrC,OAAkB,CACd,YAAY,EAAS,EAAe,CAChC,KAAK,MAAQ,GACb,KAAK,iBAAmB,EACxB,KAAK,QAAU,EACf,KAAK,cAAgB,GAAiB,KAAK,KAAK,KAAK,QAAU,SAE7D,KAAI,EAAK,EAAQ,CACnB,GAAM,GAAM,KAAK,MAAM,KAAK,GAAQ,EAAK,MAAQ,GACjD,GAAI,EAAC,GAED,KAAU,EAAI,IAAM,EAAS,KAAK,OAGtC,YAAK,QAAQ,CAAE,MAAK,MAAO,EAAI,MAAO,IAAK,EAAI,IAAK,WAAY,KAAK,QAC9D,EAAI,MAEf,QAAQ,EAAM,CACV,GAAM,GAAQ,KAAK,MAAM,UAAU,GAAQ,EAAK,MAAQ,EAAK,KAC7D,EAAQ,GAAK,KAAK,MAAM,GAAS,EAAO,KAAK,MAAM,KAAK,QAEtD,KAAI,EAAK,EAAM,CACjB,KAAK,QAAQ,CAAE,MAAK,MAAO,EAAM,IAAK,KAAK,MAAO,WAAY,KAAK,QAE/D,KAAK,oBAAsB,KAAK,eAChC,MAAK,iBAAmB,EACxB,KAAK,QAGb,MAAO,CACH,KAAK,MAAM,KAAK,CAAC,EAAG,IAAM,EAAE,WAAa,EAAE,YAC3C,KAAK,MAAM,OAAS,KAAK,IAAI,KAAK,QAAS,KAAK,MAAM,UAG9D,EAAQ,YAAc,EACtB,mBAAuC,EAAY,CAC/C,YAAY,EAAQ,CAChB,MAAM,EAAO,gBACb,KAAK,cAAgB,EAAO,iBAAmB,IAC/C,KAAK,YAAc,EAAO,aAAe,GAE7C,MAAO,CACH,GAAM,GAAS,EAAK,QAAQ,WAEtB,EAAa,AADH,EAAK,QAAQ,UACA,EAC7B,GAAI,EAAa,KAAK,cAClB,OAEJ,GAAM,GAAe,EAAa,KAAK,cACvC,KAAK,MAAM,KAAK,CAAC,EAAG,IAAM,EAAE,WAAa,EAAE,YAC3C,KAAK,MAAM,OAAS,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,OAAU,KAAK,MAAM,OAAS,EAAe,IAAO,KAAK,eAGpH,EAAQ,yBAA2B,IC5DnC,yBACA,GAAI,GAAmB,GAAQ,EAAK,iBAAoB,SAAU,EAAK,CACnE,MAAQ,IAAO,EAAI,WAAc,EAAM,CAAE,QAAW,IAExD,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,KACtD,EAAQ,aAAe,EAAQ,cAAgB,OAC/C,GAAM,GAAe,EAAgB,KACrC,OAAoB,CAChB,eAAe,EAAQ,CAAE,KAAK,OAAS,OACjC,KAAI,EAAK,EAAQ,CACnB,OAAS,GAAI,EAAG,EAAI,KAAK,OAAO,OAAQ,IAAK,CACzC,GAAM,GAAM,KAAM,MAAK,OAAO,GAAG,IAAI,EAAK,GAC1C,GAAI,EAAK,CAEL,KAAO,KACH,KAAM,MAAK,OAAO,GAAG,IAAI,EAAK,GAClC,MAAO,UAIb,KAAI,EAAK,EAAO,CAClB,OAAS,KAAS,MAAK,OACnB,KAAM,GAAM,IAAI,EAAK,KAGjC,EAAQ,cAAgB,EACxB,WAAsB,EAAO,EAAI,CAC7B,GAAM,GAAY,EAAG,MAAS,AA3BlC,GA2BqC,EAAa,SAAS,EAAG,YACpD,EAAM,eAAgB,KAAW,EAAM,CACzC,GAAI,EAAO,UACP,MAAO,MAAM,GAAG,GAAG,GACvB,GAAM,GAAM,GAAG,KAAa,KAAK,UAAU,KACrC,EAAM,KAAM,GAAM,IAAI,EAAK,EAAO,QACxC,GAAI,EACA,MAAO,GACX,GAAM,GAAM,KAAM,GAAG,GAAG,GACxB,YAAM,GAAM,IAAI,EAAK,GACd,GAEL,EAAM,IAAI,IAAS,EAAI,GAAI,GAAG,GACpC,SAAI,OAAS,AAAC,GAAW,IAAI,IAAS,EAAI,EAAQ,GAAG,GAC9C,EAEX,EAAQ,aAAe,IC3CvB,aACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,KACtD,QAAQ,SAAW,QAAQ,WAAa,OACxC,GAAM,GAAS,IACT,EAAQ,IACR,EAAU,IAChB,OAAY,CACR,YAAY,EAAQ,CAChB,KAAK,cAAgB,GAAI,GAAQ,cAAc,GAAI,GAAM,yBAAyB,CAC9E,YAAc,IAAW,KAA4B,OAAS,EAAO,cAAgB,GACrF,eAAiB,IAAW,KAA4B,OAAS,EAAO,iBAAmB,IAC3F,iBAAmB,IAAW,KAA4B,OAAS,EAAO,mBAAqB,KAC/F,GAAI,GAAO,WACf,KAAK,IAAM,KAAK,cAAc,IAC9B,KAAK,IAAM,KAAK,cAAc,UAE3B,cAAc,CACjB,MAAK,MAAK,WACN,MAAK,UAAY,GAAI,IAClB,KAAK,YAGd,EAAa,EAAM,cACzB,QAAQ,WAAa,EACrB,WAAkB,EAAI,CAClB,MAAQ,AAzBZ,GAyBe,EAAQ,cAAc,EAAY,GAEjD,QAAQ,SAAW",
  "names": []
}
